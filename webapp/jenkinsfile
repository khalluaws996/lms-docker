pipeline {
    agent any

    tools {
        nodejs 'NodeJS_Latest'
    }

    stages {
        stage('Cleanup Workspace') {
            steps {
                deleteDir()
            }
        }
        
        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }

        stage('Build LMS') {
            steps {
                echo 'Building LMS...'
                sh '''
                   cd webapp
                   npm install
                   npm run build
                '''
            }
        }

        stage('Publish Artifacts') {
            steps {
                script {
                    echo "Publishing artifacts"
                    
                    // Read the version from package.json
                    def packageJSON = readJSON file: 'webapp/package.json'
                    def packageJSONVersion = packageJSON.version 
                    
                    // Create a zip file of the dist directory
                    def zipFileName = "webapp/dist-${packageJSONVersion}.zip"
                    sh "zip -r ${zipFileName} webapp/dist/*"
                    
                    // Upload the zip file to the repository
                    def repositoryURL = "http://54.172.190.173:8081/repository/lms/"
                    def curlCommand = "curl -v -u admin:admin123 --upload-file ${zipFileName} ${repositoryURL}${zipFileName}"
                    
                    // Retry mechanism
                    def maxRetries = 6
                    def retryCount = 0
                    def success = false

                    while (retryCount < maxRetries && !success) {
                        try {
                            sh curlCommand
                            success = true
                        } catch (Exception e) {
                            echo "Upload attempt ${retryCount + 1} failed. Retrying..."
                            retryCount++
                            sleep(time: 10, unit: 'SECONDS') // Wait before retrying
                        }
                    }

                    if (!success) {
                        error("Failed to upload the artifact after ${maxRetries} attempts")
                    }
                }
            }
        }
        
        stage('Download Artifact') {
            steps {
                echo "Downloading artifact..."
                sh "mkdir -p /home/ubuntu/tmp"
                sh "curl -v -u admin:admin123 -o /home/ubuntu/tmp/dist.zip http://54.172.190.173:8081/repository/lms/webapp/dist-${packageJSONVersion}.zip"
            }
        }

        stage('Deploy Artifact') {
            steps {
                echo "Deploying artifact..."
                sh "unzip /home/ubuntu/tmp/dist.zip -d /home/ubuntu/tmp"
            }
        }
    }
}
