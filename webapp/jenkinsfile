pipeline {
    agent any

    tools {
        nodejs 'NodeJS_Latest'
    }

    environment {
        repositoryURL = "http://54.172.190.173:8081/repository/lms/"
        artifactDestination = "/tmp/dist-${packageJSONVersion}.zip"
    }

    stages {
        // Previous stages...
        
        stage('Publish Artifacts') {
            steps {
                script {
                    echo "Publishing artifacts"
                    
                    // Read the version from package.json
                    def packageJSON = readJSON file: 'webapp/package.json'
                    def packageJSONVersion = packageJSON.version 
                    
                    // Create a zip file of the dist directory
                    def zipFileName = "webapp/dist-${packageJSONVersion}.zip"
                    sh "cd webapp/dist && zip -r ../../${zipFileName} *"
                    
                    // Assign the artifact destination
                    env.artifactDestination = "/tmp/${zipFileName}"
                    
                    // Upload the zip file to the repository
                    def curlCommand = "curl -v -u admin:admin123 --upload-file ${zipFileName} ${repositoryURL}${zipFileName}"
                    
                    // Retry mechanism
                    def maxRetries = 6
                    def retryCount = 0
                    def success = false

                    while (retryCount < maxRetries && !success) {
                        try {
                            sh curlCommand
                            success = true
                        } catch (Exception e) {
                            echo "Upload attempt ${retryCount + 1} failed. Retrying..."
                            retryCount++
                            sleep(time: 10, unit: 'SECONDS') // Wait before retrying
                        }
                    }

                    if (!success) {
                        error("Failed to upload the artifact after ${maxRetries} attempts")
                    }
                }
            }
        }
        
        stage('Deploy Artifact') {
            steps {
                script {
                    echo "Deploying artifact..."
                    
                    // Assuming deployment tool is Ansible
                    sh "ansible-playbook deploy.yml --extra-vars 'artifact_path=${env.artifactDestination}'"
                    
                    echo "Artifact deployed successfully."
                }
            }
        }
    }
}
